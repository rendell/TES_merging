---
title: "Tourism Expenditure Survey unification"
author: "Rendell E . de Kort"
date: "1/7/2020"
output:
  html_document: default
  pdf_document: default
---



```{r, include=FALSE}
options(tinytex.verbose = TRUE)
```

<center>

![](C:/Users/RendelldeKort/Documents/CBS TOUR/SPSS/cbslogo2.jpg)

</center>



# Introduction
The following document provides the syntax as well as explanatory notes that describe manipulations to tourism survey data sets from 2009 to 2018. Individual data files were merged and standardized to produce a single comprehensive data set that can be queried for the years 2009-2018.

Tabulations and vizualizations are included in a seperate file. 


To reproduce the code it is necesary to change the working directory. This can be done in the "Session" tabe, "Set Working DIrectory". 
```{r}
setwd("~/CBS TOUR/SPSS")
```

# Variables
The following variables have been identified for analysis:

Nr.  | Variable                              | Code                  | Status        | Comment 
---- | ------------------------------------- | --------------------- | ---------- | ------------------
1    | Year                                  | Year                  | Completed  |
2    | Month                                 | Month                 | Completed  |
3    | Quarter                               | Q                     | Completed  |
4    | Gender                                | Gender                | Completed  |
5    | Expenditure (16 components)           | EXP_1 to EXP_14       | Completed  |
6    | Weights                               | WEIGHT                | Completed  |
7    | Weighted expenditures (16 components) | W_EXP1 to W_EXP14     | Completed  |
8    | Weighted Expenditure (total)          | W_EXP_TOT             | Completed  |
9    | Resident                              | Resident              | Completed  |
10   | Repeater                              | Repeater              | Completed  |
11   | Place of stay                         | Place_stay            | Completed  |
13   | Main purpose of visit                 | A1_MAIN_PURPOSE_VISIT | In progress|
14   | Number of nights                      | Nights                | Completed  |
15   | State (U.S.A)                         | State                 | Completed  |
16   | Household Income                      | Household_Income      | Completed  | Valid 2014 to 2018
17   | B9 How many persons does exp. cover   | B9T                   | Pending    |
18   | Nights per observation                | N_PERNOC              | Pending    |



# Packages
To complete the manipulations necesary, only two packages were utilized: 'tidyverse' and 'foreign'. 
Within the tidyverse, the functions are mostly from dplyr and forecats. More information on the functions from these pacakges are available on:

https://resources.rstudio.com/rstudio-developed/factors

https://rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf

```{r, eval=FALSE}
library(tidyverse)
library(foreign)
```

# Reading in data
Data files obtained from the Tourism Department and were processed in SPSS by Kepa.
```{r, echo=FALSE, warning=FALSE, message=FALSE,eval=FALSE}
data_2009 <- read.spss("TES2009_ELE_final_agg.sav", to.data.frame=TRUE)
data_2010 <- read.spss("TES2010_ELE_final_agg.sav", to.data.frame=TRUE)
data_2011 <- read.spss("TES2011_ELE_final_agg.sav", to.data.frame=TRUE)
data_2012 <- read.spss("TES2012_ELE_final_agg.sav", to.data.frame=TRUE)
data_2013 <- read.spss("TES2013_ELE_final_agg.sav", to.data.frame=TRUE)
data_2014 <- read.spss("TES2014_ELE_final_agg.sav", to.data.frame=TRUE)
data_2015 <- read.spss("TES2015_ELE_final_agg.sav", to.data.frame=TRUE)
data_2016 <- read.spss("TES2016_ELE_final_agg.sav", to.data.frame=TRUE)
data_2017 <- read.spss("TES2017_ELE_final_agg2.sav", to.data.frame=TRUE)
data_2018 <- read.spss("TES2018_ELE_final_agg2.sav", to.data.frame=TRUE)
```

Bind all datasets using their serial number to create a unique key.
```{r,eval=FALSE}
colnames(data_2009) <- paste(colnames(data_2009), "2009", sep = "_")
colnames(data_2010) <- paste(colnames(data_2010), "2010", sep = "_")
colnames(data_2011) <- paste(colnames(data_2011), "2011", sep = "_")
colnames(data_2012) <- paste(colnames(data_2012), "2012", sep = "_")
colnames(data_2013) <- paste(colnames(data_2013), "2013", sep = "_")
colnames(data_2014) <- paste(colnames(data_2014), "2014", sep = "_")
colnames(data_2015) <- paste(colnames(data_2015), "2015", sep = "_")
colnames(data_2016) <- paste(colnames(data_2016), "2016", sep = "_")
colnames(data_2017) <- paste(colnames(data_2017), "2017", sep = "_")
colnames(data_2018) <- paste(colnames(data_2018), "2018", sep = "_")


data_2009$key <- 200900000+data_2009$sernr_2009
data_2010$key <- 201000000+data_2010$TES_ID_SERIALNUMBER_2010
data_2011$key <- 201100000+data_2011$TES_ID_SERIALNUMBER_2011
data_2012$key <- 201200000+data_2012$TES_ID_SERIALNUMBER_2012
data_2013$key <- 201300000+data_2013$TES_ID_SERIALNUMBER_2013
data_2014$key <- 201400000+data_2014$SERIAL_NR_2014
data_2015$key <- 201500000+data_2015$TES_ID_SERIALNUMBER_2015
data_2016$key <- 201600000+data_2016$TES_ID_SERIALNUMBER_2016
data_2017$key <- 201700000+data_2017$TES_ID_SERIALNUMBER_2017
data_2018$key <- 201800000+data_2018$TES_ID_SERIALNUMBER_2018
```

Prior to joining I want to take care of the variables who's names are not consistent
```{r,eval=FALSE}
# Variable: Place of Residence
levels(data_2009$a2_2009) <- c(levels(data_2009$a2_2009), "The Netherlands")
data_2009$a2_2009[data_2009$a2_2009=="Netherlands"]  <- "The Netherlands" 
data_2009$a2_2009 <- factor(data_2009$a2_2009)
data_2009$a2_2009 <- factor(data_2009$a2_2009, levels = c("United States", 
                                                          "Venezuela", 
                                                          "The Netherlands",
                                                          "Brazil",
                                                          "Netherlands Antilles",
                                                          "Canada",
                                                          "Colombia",
                                                          "Other"
                                                          ))
```
Combining the seperate data sets in to one integrated dataframe. 
Redundant serialnumber variables are removed.
```{r,eval=FALSE}
df <- full_join(data_2009,
                         data_2010,
                         by="key")
df <- full_join(df,
                         data_2011,
                         by="key")

df <- full_join(df,
                         data_2012,
                         by="key")
df <- full_join(df,
                         data_2013,
                         by="key")
df <- full_join(df,
                         data_2014,
                         by="key")
df <- full_join(df,
                         data_2015,
                         by="key")
df <- full_join(df,
                         data_2016,
                         by="key")
df <- full_join(df,
                         data_2017,
                         by="key")
df <- full_join(df,
                         data_2018,
                         by="key")

df <- df %>% select(-c(sernr_2009,
                       TES_ID_SERIALNUMBER_2010,
                       TES_ID_SERIALNUMBER_2011,
                       TES_ID_SERIALNUMBER_2012,
                       TES_ID_SERIALNUMBER_2013,
                       TES_ID_SERIALNUMBER_2014,
                       TES_ID_SERIALNUMBER_2015,
                       TES_ID_SERIALNUMBER_2016,
                       TES_ID_SERIALNUMBER_2017, 
                       TES_ID_SERIALNUMBER_2018
                       ))
```

Since we now have a comprehensive dataset, we can go ahead and remove redundant individual year data files.
```{r,eval=FALSE}
rm(data_2009,
   data_2010,
   data_2011,
   data_2012,
   data_2013,
   data_2014,
   data_2015,
   data_2016,
   data_2017,
   data_2018
   )
```

# Merging function
To automate some of the process of merging variables, it was necesarry to specify a custom function that once provdided the files per year would merge all of them in a single variable and then delete the redundant year variables from the dataset.

For simplicity we called it the 'rendell function'.
```{r,eval=FALSE}
rendell <-function(df, Name_new_variable, 
                   Name_2009, 
                   Name_2010, 
                   Name_2011, 
                   Name_2012, 
                   Name_2013, 
                   Name_2014,
                   Name_2015, 
                   Name_2016,
                   Name_2017,
                   Name_2018) {
  df[, Name_new_variable]= coalesce(df[, Name_2009], 
                                    df[, Name_2010], 
                                    df[, Name_2011],
                                    df[, Name_2012],
                                    df[, Name_2013],
                                    df[, Name_2014],
                                    df[, Name_2015],
                                    df[, Name_2016],
                                    df[, Name_2017],
                                    df[, Name_2018]
                                    )
  
  df <- df %>% select(-c(Name_2009, 
                         Name_2010, 
                   Name_2011, 
                   Name_2012, 
                   Name_2013, 
                   Name_2014,
                   Name_2015, 
                   Name_2016,
                   Name_2017,
                   Name_2018
                   )) 
}
```

## 1: "Year"
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "Year", 
        Name_2009         = "year_2009",
        Name_2010         = "YEAR_2010", 
        Name_2011         = "YEAR_2011", 
        Name_2012         = "YEAR_2012", 
        Name_2013         = "YEAR_2013", 
        Name_2014         = "YEAR_2014", 
        Name_2015         = "YEAR_2015", 
        Name_2016         = "YEAR_2016",
        Name_2017         = "year_2017",
        Name_2018         = "YEAR_2018")
```

## 2: "Month"
Noticed that 2009 variable October was names as Oktober. This was first corrected.
Also, 2017 and 2018 were numerical and had to be converted to factors of the same type.
```{r,eval=FALSE}
df$month_2009 <- fct_recode(df$month_2009,"October"="Oktober")
df$MONTH_2017<- as.factor(df$MONTH_2017)
df$MONTH_2018<- as.factor(df$MONTH_2018)

df$MONTH_2018 <- fct_recode(df$MONTH_2018, 
                            January="1", 
                            February="2", 
                            March="3", 
                            April="4", 
                            May="5", 
                            June="6", 
                            July="7", 
                            August="8", 
                            September="9", 
                            October="10", 
                            November="11", 
                            December="12" 
                            )

df$MONTH_2017 <- fct_recode(df$MONTH_2017, 
                            January="1", 
                            February="2", 
                            March="3", 
                            April="4", 
                            May="5", 
                            June="6", 
                            July="7", 
                            August="8", 
                            September="9", 
                            October="10", 
                            November="11", 
                            December="12" 
                            )


df <- rendell(df                = df,
        Name_new_variable = "Month", 
        Name_2009         = "month_2009",
        Name_2010         = "MONTH_2010", 
        Name_2011         = "MONTH_2011", 
        Name_2012         = "MONTH_2012", 
        Name_2013         = "MONTH_2013", 
        Name_2014         = "MONTH_2014", 
        Name_2015         = "MONTH_2015", 
        Name_2016         = "MONTH_2016",
        Name_2017         = "MONTH_2017",
        Name_2018         = "MONTH_2018"
        )
```

## 3. Quarter
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "Q", 
        Name_2009         = "qtr_2009",
        Name_2010         = "QTR_2010", 
        Name_2011         = "QTR_2011", 
        Name_2012         = "QTR_2012", 
        Name_2013         = "QTR_2013", 
        Name_2014         = "QTR_2014", 
        Name_2015         = "QTR_2015", 
        Name_2016         = "QTR_2016",
        Name_2017         = "QTR_2017",
        Name_2018         = "QTR_2018"
        )
```

## 4. Gender
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "Gender", 
        Name_2009         = "a9_2009",
        Name_2010         = "A9_SEX_2010", 
        Name_2011         = "A9_SEX_2011", 
        Name_2012         = "A9_SEX_2012", 
        Name_2013         = "A9_SEX_2013", 
        Name_2014         = "A9_SEX_2014", 
        Name_2015         = "A9_SEX_2015", 
        Name_2016         = "A9_SEX_2016",
        Name_2017         = "A9_SEX_2017",
        Name_2018         = "A9_SEX_2018"
        )
#Note: there are 5 NA's.
``` 

## Ethnic background (refered to as "Type")
*Not included at the moment*
The choice was taken by CBS to drop this variable since it was unlikely to be included in further analysis. 
```{r, eval=FALSE}
# levels(df$TYPE_2010) <- c(levels(df$TYPE_2010), "Cat_1") 
# df$TYPE_2010[df$TYPE_2010==1]  <- "Cat_1" 

# levels(df$TYPE_2010) <- c(levels(df$TYPE_2010), "Cat_2") 
# df$TYPE_2010[df$TYPE_2010==2]  <- "Cat_2" 

# df <- subset(df, TYPE_2010 != 1)                                         # this is not yet operational


# df <- rendell(df                = df,
#        Name_new_variable = "Type", 
#        Name_2009         = "type_2009",
#        Name_2010         = "TYPE_2010", 
#        Name_2011         = "TYPE_2011", 
#        Name_2012         = "TYPE_2012", 
#        Name_2013         = "TYPE_2013", 
#       Name_2014         = "TYPE_2014", 
#        Name_2015         = "TYPE_2015", 
#        Name_2016         = "TYPE_2016" )
#summary(df$Type)
#Note: coalesce not working aparantly unequal factor levels perhaps. 

df$type_2009 <- NULL
df$TYPE_2010 <- NULL
df$TYPE_2011 <- NULL
df$TYPE_2012 <- NULL
df$TYPE_2013 <- NULL
df$TYPE_2014 <- NULL
df$TYPE_2015 <- NULL
df$TYPE_2016 <- NULL
df$TYPE_2017 <- NULL
df$TYPE_2018 <- NULL
```

## 5. Tourism expenditure components
This follows the example that was supplied by Kepa.
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "EXP1", 
        Name_2009         = "TOT_DEP_EXP1_2009",
        Name_2010         = "TOT_DEP_EXP1_2010", 
        Name_2011         = "TOT_DEP_EXP1_2011", 
        Name_2012         = "TOT_DEP_EXP1_2012", 
        Name_2013         = "TOT_DEP_EXP1_2013", 
        Name_2014         = "TOT_DEP_EXP1_2014", 
        Name_2015         = "TOT_DEP_EXP1_2015", 
        Name_2016         = "TOT_DEP_EXP1_2016",
        Name_2017         = "TOT_DEP_EXP1_2017",
        Name_2018         = "TOT_DEP_EXP1_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP2", 
        Name_2009         = "TOT_DEP_EXP2_2009",
        Name_2010         = "TOT_DEP_EXP2_2010", 
        Name_2011         = "TOT_DEP_EXP2_2011", 
        Name_2012         = "TOT_DEP_EXP2_2012", 
        Name_2013         = "TOT_DEP_EXP2_2013", 
        Name_2014         = "TOT_DEP_EXP2_2014", 
        Name_2015         = "TOT_DEP_EXP2_2015", 
        Name_2016         = "TOT_DEP_EXP2_2016",
        Name_2017         = "TOT_DEP_EXP2_2017",
        Name_2018         = "TOT_DEP_EXP2_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP3", 
        Name_2009         = "TOT_DEP_EXP3_2009",
        Name_2010         = "TOT_DEP_EXP3_2010", 
        Name_2011         = "TOT_DEP_EXP3_2011", 
        Name_2012         = "TOT_DEP_EXP3_2012", 
        Name_2013         = "TOT_DEP_EXP3_2013", 
        Name_2014         = "TOT_DEP_EXP3_2014", 
        Name_2015         = "TOT_DEP_EXP3_2015", 
        Name_2016         = "TOT_DEP_EXP3_2016",
        Name_2017         = "TOT_DEP_EXP3_2017",
        Name_2018         = "TOT_DEP_EXP3_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP4", 
        Name_2009         = "TOT_DEP_EXP4_2009",
        Name_2010         = "TOT_DEP_EXP4_2010", 
        Name_2011         = "TOT_DEP_EXP4_2011", 
        Name_2012         = "TOT_DEP_EXP4_2012", 
        Name_2013         = "TOT_DEP_EXP4_2013", 
        Name_2014         = "TOT_DEP_EXP4_2014", 
        Name_2015         = "TOT_DEP_EXP4_2015", 
        Name_2016         = "TOT_DEP_EXP4_2016",
        Name_2017         = "TOT_DEP_EXP4_2017",
        Name_2018         = "TOT_DEP_EXP4_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP5", 
        Name_2009         = "TOT_DEP_EXP5_2009",
        Name_2010         = "TOT_DEP_EXP5_2010", 
        Name_2011         = "TOT_DEP_EXP5_2011", 
        Name_2012         = "TOT_DEP_EXP5_2012", 
        Name_2013         = "TOT_DEP_EXP5_2013", 
        Name_2014         = "TOT_DEP_EXP5_2014", 
        Name_2015         = "TOT_DEP_EXP5_2015", 
        Name_2016         = "TOT_DEP_EXP5_2016",
        Name_2017         = "TOT_DEP_EXP5_2017",
        Name_2018         = "TOT_DEP_EXP5_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP6", 
        Name_2009         = "TOT_DEP_EXP6_2009",
        Name_2010         = "TOT_DEP_EXP6_2010", 
        Name_2011         = "TOT_DEP_EXP6_2011", 
        Name_2012         = "TOT_DEP_EXP6_2012", 
        Name_2013         = "TOT_DEP_EXP6_2013", 
        Name_2014         = "TOT_DEP_EXP6_2014", 
        Name_2015         = "TOT_DEP_EXP6_2015", 
        Name_2016         = "TOT_DEP_EXP6_2016",
        Name_2017         = "TOT_DEP_EXP6_2017",
        Name_2018         = "TOT_DEP_EXP6_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP7", 
        Name_2009         = "TOT_DEP_EXP7_2009",
        Name_2010         = "TOT_DEP_EXP7_2010", 
        Name_2011         = "TOT_DEP_EXP7_2011", 
        Name_2012         = "TOT_DEP_EXP7_2012", 
        Name_2013         = "TOT_DEP_EXP7_2013", 
        Name_2014         = "TOT_DEP_EXP7_2014", 
        Name_2015         = "TOT_DEP_EXP7_2015", 
        Name_2016         = "TOT_DEP_EXP7_2016",
        Name_2017         = "TOT_DEP_EXP7_2017",
        Name_2018         = "TOT_DEP_EXP7_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP8", 
        Name_2009         = "TOT_DEP_EXP8_2009",
        Name_2010         = "TOT_DEP_EXP8_2010", 
        Name_2011         = "TOT_DEP_EXP8_2011", 
        Name_2012         = "TOT_DEP_EXP8_2012", 
        Name_2013         = "TOT_DEP_EXP8_2013", 
        Name_2014         = "TOT_DEP_EXP8_2014", 
        Name_2015         = "TOT_DEP_EXP8_2015", 
        Name_2016         = "TOT_DEP_EXP8_2016",
        Name_2017         = "TOT_DEP_EXP8_2017",
        Name_2018         = "TOT_DEP_EXP8_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP9", 
        Name_2009         = "TOT_DEP_EXP9_2009",
        Name_2010         = "TOT_DEP_EXP9_2010", 
        Name_2011         = "TOT_DEP_EXP9_2011", 
        Name_2012         = "TOT_DEP_EXP9_2012", 
        Name_2013         = "TOT_DEP_EXP9_2013", 
        Name_2014         = "TOT_DEP_EXP9_2014", 
        Name_2015         = "TOT_DEP_EXP9_2015", 
        Name_2016         = "TOT_DEP_EXP9_2016",
        Name_2017         = "TOT_DEP_EXP9_2017",
        Name_2018         = "TOT_DEP_EXP9_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP10", 
        Name_2009         = "TOT_DEP_EXP10_2009",
        Name_2010         = "TOT_DEP_EXP10_2010", 
        Name_2011         = "TOT_DEP_EXP10_2011", 
        Name_2012         = "TOT_DEP_EXP10_2012", 
        Name_2013         = "TOT_DEP_EXP10_2013", 
        Name_2014         = "TOT_DEP_EXP10_2014", 
        Name_2015         = "TOT_DEP_EXP10_2015", 
        Name_2016         = "TOT_DEP_EXP10_2016",
        Name_2017         = "TOT_DEP_EXP10_2017",
        Name_2018         = "TOT_DEP_EXP10_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP11", 
        Name_2009         = "TOT_DEP_EXP11_2009",
        Name_2010         = "TOT_DEP_EXP11_2010", 
        Name_2011         = "TOT_DEP_EXP11_2011", 
        Name_2012         = "TOT_DEP_EXP11_2012", 
        Name_2013         = "TOT_DEP_EXP11_2013", 
        Name_2014         = "TOT_DEP_EXP11_2014", 
        Name_2015         = "TOT_DEP_EXP11_2015", 
        Name_2016         = "TOT_DEP_EXP11_2016",
        Name_2017         = "TOT_DEP_EXP11_2017",
        Name_2018         = "TOT_DEP_EXP11_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP12", 
        Name_2009         = "TOT_DEP_EXP12_2009",
        Name_2010         = "TOT_DEP_EXP12_2010", 
        Name_2011         = "TOT_DEP_EXP12_2011", 
        Name_2012         = "TOT_DEP_EXP12_2012", 
        Name_2013         = "TOT_DEP_EXP12_2013", 
        Name_2014         = "TOT_DEP_EXP12_2014", 
        Name_2015         = "TOT_DEP_EXP12_2015", 
        Name_2016         = "TOT_DEP_EXP12_2016",
        Name_2017         = "TOT_DEP_EXP12_2017",
        Name_2018         = "TOT_DEP_EXP12_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP13", 
        Name_2009         = "TOT_DEP_EXP13_2009",
        Name_2010         = "TOT_DEP_EXP13_2010", 
        Name_2011         = "TOT_DEP_EXP13_2011", 
        Name_2012         = "TOT_DEP_EXP13_2012", 
        Name_2013         = "TOT_DEP_EXP13_2013", 
        Name_2014         = "TOT_DEP_EXP13_2014", 
        Name_2015         = "TOT_DEP_EXP13_2015", 
        Name_2016         = "TOT_DEP_EXP13_2016",
        Name_2017         = "TOT_DEP_EXP13_2017",
        Name_2018         = "TOT_DEP_EXP13_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP14", 
        Name_2009         = "TOT_DEP_EXP14_2009",
        Name_2010         = "TOT_DEP_EXP14_2010", 
        Name_2011         = "TOT_DEP_EXP14_2011", 
        Name_2012         = "TOT_DEP_EXP14_2012", 
        Name_2013         = "TOT_DEP_EXP14_2013", 
        Name_2014         = "TOT_DEP_EXP14_2014", 
        Name_2015         = "TOT_DEP_EXP14_2015", 
        Name_2016         = "TOT_DEP_EXP14_2016",
        Name_2017         = "TOT_DEP_EXP14_2017",
        Name_2018         = "TOT_DEP_EXP14_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP12_1", 
        Name_2009         = "TOT_DEP_EXP12_1_2009",
        Name_2010         = "TOT_DEP_EXP12_1_2010", 
        Name_2011         = "TOT_DEP_EXP12_1_2011", 
        Name_2012         = "TOT_DEP_EXP12_1_2012", 
        Name_2013         = "TOT_DEP_EXP12_1_2013", 
        Name_2014         = "TOT_DEP_EXP12_1_2014", 
        Name_2015         = "TOT_DEP_EXP12_1_2015", 
        Name_2016         = "TOT_DEP_EXP12_1_2016",
        Name_2017         = "TOT_DEP_EXP12_1_2017",
        Name_2018         = "TOT_DEP_EXP12_1_2018"
        )

df <- rendell(df                = df,
        Name_new_variable = "EXP12_2", 
        Name_2009         = "TOT_DEP_EXP12_2_2009",
        Name_2010         = "TOT_DEP_EXP12_2_2010", 
        Name_2011         = "TOT_DEP_EXP12_2_2011", 
        Name_2012         = "TOT_DEP_EXP12_2_2012", 
        Name_2013         = "TOT_DEP_EXP12_2_2013", 
        Name_2014         = "TOT_DEP_EXP12_2_2014", 
        Name_2015         = "TOT_DEP_EXP12_2_2015", 
        Name_2016         = "TOT_DEP_EXP12_2_2016",
        Name_2017         = "TOT_DEP_EXP12_2_2017",
        Name_2018         = "TOT_DEP_EXP12_2_2018"
        )

df$TOT_EXP <- df$EXP1 + 
              df$EXP2 +
              df$EXP3 +
              df$EXP4 + 
              df$EXP5 +
              df$EXP6 +
              df$EXP7 +
              df$EXP8 +
              df$EXP9 +
              df$EXP10 +
              df$EXP11 +
              df$EXP12 +
              df$EXP13 +
              df$EXP14 +
              df$EXP12_1 +
              df$EXP12_2 

# Replacing NA's with 0
df$TOT_EXP[is.na(df$TOT_EXP)] <- 0
```

## 6. Weights
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "WEIGHT", 
        Name_2009         = "weight_2009",
        Name_2010         = "weight_2010", 
        Name_2011         = "weight_2011", 
        Name_2012         = "weight_2012", 
        Name_2013         = "weight_2013", 
        Name_2014         = "weight_2014", 
        Name_2015         = "weight_2015", 
        Name_2016         = "weight_2016",
        Name_2017         = "weight_2017",
        Name_2018         = "weight_2018"
        )
```

```{r,eval=FALSE}
df$W_EXP1    <- df$EXP1    * df$WEIGHT
df$W_EXP2    <- df$EXP2    * df$WEIGHT
df$W_EXP3    <- df$EXP3    * df$WEIGHT
df$W_EXP4    <- df$EXP4    * df$WEIGHT
df$W_EXP5    <- df$EXP5    * df$WEIGHT
df$W_EXP6    <- df$EXP6    * df$WEIGHT
df$W_EXP7    <- df$EXP7    * df$WEIGHT
df$W_EXP8    <- df$EXP8    * df$WEIGHT
df$W_EXP9    <- df$EXP9    * df$WEIGHT
df$W_EXP10   <- df$EXP10   * df$WEIGHT
df$W_EXP11   <- df$EXP11   * df$WEIGHT
df$W_EXP12   <- df$EXP12   * df$WEIGHT
df$W_EXP13   <- df$EXP13   * df$WEIGHT
df$W_EXP14   <- df$EXP14   * df$WEIGHT
df$W_EXP12_1 <- df$EXP12_1 * df$WEIGHT
df$W_EXP12_2 <- df$EXP12_2 * df$WEIGHT

df$W_EXP1[is.na(df$W_EXP1)] <- 0
df$W_EXP2[is.na(df$W_EXP2)] <- 0
df$W_EXP3[is.na(df$W_EXP3)] <- 0
df$W_EXP4[is.na(df$W_EXP4)] <- 0
df$W_EXP5[is.na(df$W_EXP5)] <- 0
df$W_EXP6[is.na(df$W_EXP6)] <- 0
df$W_EXP7[is.na(df$W_EXP7)] <- 0
df$W_EXP8[is.na(df$W_EXP8)] <- 0
df$W_EXP9[is.na(df$W_EXP9)] <- 0
df$W_EXP10[is.na(df$W_EXP10)] <- 0
df$W_EXP11[is.na(df$W_EXP11)] <- 0
df$W_EXP12[is.na(df$W_EXP12)] <- 0
df$W_EXP13[is.na(df$W_EXP13)] <- 0
df$W_EXP14[is.na(df$W_EXP14)] <- 0
df$W_EXP12_1[is.na(df$W_EXP12_1)] <- 0
df$W_EXP12_2[is.na(df$W_EXP12_2)] <- 0
```


## 8. Creating a new total weighted
```{r,eval=FALSE}
df$W_TOT_EXP <- df$W_EXP1 +
    df$W_EXP2 +
    df$W_EXP3 +
    df$W_EXP4 +
    df$W_EXP5 +
    df$W_EXP6 +
    df$W_EXP7 +
    df$W_EXP8 +
    df$W_EXP9 +
    df$W_EXP10 +
    df$W_EXP11 +
    df$W_EXP12 +
    df$W_EXP13 +
    df$W_EXP14 +
    df$W_EXP12_1 +
    df$W_EXP12_2
```
## 9. Country of Residence
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "Resident", 
    Name_2009         = "RESIDENCE_TSA2016_GRP_2009",
    Name_2010         = "RESIDENCE_TSA2016_GRP_2010", 
    Name_2011         = "RESIDENCE_TSA2016_GRP_2011", 
    Name_2012         = "RESIDENCE_TSA2016_GRP_2012", 
    Name_2013         = "RESIDENCE_TSA2016_GRP_2013", 
    Name_2014         = "RESIDENCE_TSA2016_GRP_2014", 
    Name_2015         = "RESIDENCE_TSA2016_GRP_2015", 
    Name_2016         = "RESIDENCE_TSA2016_GRP_2016",
    Name_2017         = "RESIDENCE_TSA2016_GRP_2017",
    Name_2018         = "RESIDENCE_TSA2016_GRP_2018"
        )
```

## 10. Number of visits
```{r,eval=FALSE}
#Fix factor level in 2009 first:
df$a3_2009<- fct_recode(df$a3_2009, " First time"="First")
df$a3_2009<- fct_recode(df$a3_2009, " 2-5 times"="2-5 Times")
df$a3_2009<- fct_recode(df$a3_2009, " 6 times and up"="6 times and up")

# And 2017 and 2018:
df$A3_2017<- fct_recode(df$A3_2017, " First time"="First time")
df$A3_2017<- fct_recode(df$A3_2017, " 2-5 times"="2-5 times")
df$A3_2017<- fct_recode(df$A3_2017, " 6 times and up"="6+ times")

df$A3_2018<- fct_recode(df$A3_2018, " First time"="First time")
df$A3_2018<- fct_recode(df$A3_2018, " 2-5 times"="2-5 times")
df$A3_2018<- fct_recode(df$A3_2018, " 6 times and up"="6+ times")


df <- rendell(df                = df,
        Name_new_variable = "Repeater", 
    Name_2009         = "a3_2009",
    Name_2010         = "A3_2010", 
    Name_2011         = "A3_2011", 
    Name_2012         = "A3_2012", 
    Name_2013         = "A3_2013", 
    Name_2014         = "A3_2014", 
    Name_2015         = "A3_2015", 
    Name_2016         = "A3_2016",
    Name_2017         = "A3_2017",
    Name_2018         = "A3_2018"
        )
```

## 10. Place of stay
Unfortunatly considering there was quite a bit of difference between the naming convention used throughout the years, a complete wre-write o the factors was necesarry to enable the merging. 
```{r,eval=FALSE}
df<- df%>%
  mutate(a5_2009=fct_recode(a5_2009,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guesthouse/Apartment/Villa",
  "Friends/Relatives"    ="Friend/Relative",
  "Other"                ="Other",
  "Timeshare"            ="Timeshare",
  "Own House"            ="Own House",
  "Condominium"          ="Condominium"
  ))

df<- df%>%
  mutate(A5_2010=fct_recode(A5_2010,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest house/apartment",
  "Friends/Relatives"    ="Friends/relatives",
  "Other"                ="other",
  "Timeshare"            ="Timeshare resort",
  "Own House"            ="Own house",
  "Condominium"          ="Condominium"
                             ))
df <- df%>%
  mutate(A5_2011=fct_recode(A5_2011,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest house/apartment",
  "Friends/Relatives"    ="Friends/relatives",
  "Other"                ="other",
  "Timeshare"            ="Timeshare resort",
  "Own House"            ="Own house",
  "Condominium"          ="Condominium"
                             ))
df<- df%>%
  mutate(A5_2012=fct_recode(A5_2012,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest house/apartment",
  "Friends/Relatives"    ="Friends/relatives",
  "Other"                ="other",
  "Timeshare"            ="Timeshare resort",
  "Own House"            ="Own house",
  "Condominium"          ="Condominium"
                             ))
df<- df%>%
  mutate(A5_2013=fct_recode(A5_2013,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest house/apartment",
  "Friends/Relatives"    ="Friends/relatives",
  "Other"                ="other",
  "Timeshare"            ="Timeshare resort",
  "Own House"            ="Own house",
  "Condominium"          ="Condominium"
                             ))
df<- df%>%
  mutate(A5_2014=fct_recode(A5_2014,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest house/apartment",
  "Friends/Relatives"    ="Friends/relatives",
  "Other"                ="other",
  "Timeshare"            ="Timeshare resort",
  "Own House"            ="Own house",
  "Condominium"          ="Condominium"
                             ))
df<- df%>%
  mutate(A5_2015=fct_recode(A5_2015,
  "Hotel"                =" Hotel",
  "Guest house/apartment"=" Guest house/apartment",
  "Friends/Relatives"    =" Friends/relatives",
  "Other"                =" other",
  "Timeshare"            =" Timeshare resort",
  "Own House"            =" Own house",
  "Condominium"          =" Condominium"
                             ))
df<- df%>%
  mutate(A5_2016=fct_recode(A5_2016,
  "Hotel"                =" Hotel",
  "Guest house/apartment"=" Guest house/apartment",
  "Friends/Relatives"    =" Friends/relatives",
  "Other"                =" other",
  "Timeshare"            =" Timeshare resort",
  "Own House"            =" Own house",
  "Condominium"          =" Condominium"
                             ))
df<- df%>%
  mutate(A5_2017=fct_recode(A5_2017,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest House/Apartment/Villa (specify the name)",
  "Friends/Relatives"    ="Friends/Relatives",
  "Other"                ="Other (specify)",
  "Timeshare"            ="Timeshare Resort",
  "Own House"            ="Own House",
  "Condominium"          ="Condominium (specify the name)"
                             ))
df<- df%>%
  mutate(A5_2018=fct_recode(A5_2018,
  "Hotel"                ="Hotel",
  "Guest house/apartment"="Guest House/Apartment/Villa (specify the name)",
  "Friends/Relatives"    ="Friends/Relatives",
  "Other"                ="Other (specify)",
  "Timeshare"            ="Timeshare Resort",
  "Own House"            ="Own House",
  "Condominium"          ="Condominium (specify the name)"
                             ))

df <- rendell(df                = df,
        Name_new_variable = "Place_stay", 
    Name_2009         = "a5_2009",
    Name_2010         = "A5_2010", 
    Name_2011         = "A5_2011", 
    Name_2012         = "A5_2012", 
    Name_2013         = "A5_2013", 
    Name_2014         = "A5_2014", 
    Name_2015         = "A5_2015", 
    Name_2016         = "A5_2016",
    Name_2017         = "A5_2017",
    Name_2018         = "A5_2018"
        )
```

## 11. Main purpose of visit                                                                  *2018 needs fixing*
```{r,eval=FALSE}
df$a1_2009 <- fct_recode(df$a1_2009,
  " Vacation"="Vacation",
  " Honeymoon"="Honeymoon",
  " Incentive award"= "Incentive",
  " Visit friends/relatives"="Visit Friend/Relative",
  " Golf"="Golf",
  " Business and leisure"="Business & Leisure",
  " Business only/ Convention/ Conference"="Business Only/Convention",
  " Wedding"="Wedding",
  " Get married"="Get Married",
  " Events/ Festival"="Events/Festivals",
  " Other"="Other"
  ) %>%
  fct_relevel(c(" Vacation", 
                   " Honeymoon", 
                   " Incentive award",
                   " Visit friends/relatives",
                   " Golf",
                   " Business and leisure",
                   " Business only/ Convention/ Conference",
                   " Wedding",
                   " Get married",
                   " Events/ Festival",
                   " Other"
                   )) 

df$A1_MAIN_PURPOSE_2018 <- fct_relevel(df$A1_MAIN_PURPOSE_2018, c(" Vacation", 
                   " Honeymoon", 
                   " Incentive award",
                   " Visit friends/relatives",
                   " Golf",
                   " Business and leisure",
                   " Business only/ Convention/ Conference",
                   " Wedding",
                   " Get married",
                   " Events/ Festival",
                   " Other"
                   ))

df <- rendell(df                = df,
        Name_new_variable = "A1_MAIN_PURPOSE_VISIT", 
        Name_2009         = "a1_2009",
        Name_2010         = "A1_MAIN_PURPOSE_VISIT_2010", 
        Name_2011         = "A1_MAIN_PURPOSE_VISIT_2011", 
        Name_2012         = "A1_MAIN_PURPOSE_VISIT_2012", 
        Name_2013         = "A1_MAIN_PURPOSE_VISIT_2013", 
        Name_2014         = "A1_MAIN_PURPOSE_VISIT_2014", 
        Name_2015         = "A1_MAIN_PURPOSE_VISIT_2015", 
        Name_2016         = "A1_MAIN_PURPOSE_VISIT_2016",
        Name_2017         = "A1_MAIN_PURPOSE_VISIT_2017",
        Name_2018         = "A1_MAIN_PURPOSE_VISIT_2018"
        )
summary(df$A1_MAIN_PURPOSE_VISIT)
```

## 13. Number of nights
```{r,eval=FALSE}
df <- rendell(df                = df,
        Name_new_variable = "Nights", 
    Name_2009         = "a7_2009",
    Name_2010         = "A7_2010", 
    Name_2011         = "A7_2011", 
    Name_2012         = "A7_2012", 
    Name_2013         = "A7_2013", 
    Name_2014         = "A7_2014", 
    Name_2015         = "A7_2015", 
    Name_2016         = "A7_2016",
    Name_2017         = "A7_2017",
    Name_2018         = "A7_2018"
        )
```

## 14. State (U.S.A)
Merging of this variable resulted in te realization that 2018, the states are indicated by a number rather than a word. A list was obtained from CBS to standardize. 

Provides useful relative proportions. Though it should be noted that it contains "missing" observations which are believed to be atributed to arrivals from destinations other than from the U.S.
```{r,eval=FALSE}
df$a2a_2009 <-as.character(df$a2a_2009)
df$A2A_2010 <-as.character(df$A2A_2010)
df$A2A_2011 <-as.character(df$A2A_2011)
df$A2A_2012 <-as.character(df$A2A_2012)
df$A2A_2013 <-as.character(df$A2A_2013)
df$A2A_2014 <-as.character(df$A2A_2014)
df$A2A_2015 <-as.character(df$A2A_2015)
df$A2A_2016 <-as.character(df$A2A_2016)
df$A2A_2017 <-as.character(df$A2A_2017)
df$A2A_2018 <-as.character(df$A2A_2018)

df <- rendell(df                = df,
        Name_new_variable = "State", 
    Name_2009         = "a2a_2009",
    Name_2010         = "A2A_2010", 
    Name_2011         = "A2A_2011", 
    Name_2012         = "A2A_2012", 
    Name_2013         = "A2A_2013", 
    Name_2014         = "A2A_2014", 
    Name_2015         = "A2A_2015", 
    Name_2016         = "A2A_2016",
    Name_2017         = "A2A_2017",
    Name_2018         = "A2A_2018"
        )

df$State <- fct_recode(df$State,
                       "Alabama"="1",
                       "Alaska"="2",
                       "Arizona"="3",
                       "Arkansas"="4",
                       "California"="5",
                       "Colorado"="6",
                       "Connecticut"="7",
                       "Delaware"="8",
                       "Florida"="9",
                       "Georgia"="10",
                       "Hawaii"="11",
                       "Idaho"="12",
                       "Illinois"="13",
                       "Indiana"="14",
                       "Iowa"="15",
                       "Kansas"="16",
                       "Kentucky"="17",
                       "Louisiana"="18",
                       "Maine"="19",
                       "Maryland"="20",
                       "Massachusetts"="21",
                       "Michigan"="22",
                       "Minnesota"="23",
                       "Mississippi"="24",
                       "Missouri"="25",
                       "Montana"="26",
                       "Nebraska"="27",
                       "Nevada"="28",
                       "New Hampshire"="29",
                       "New Jersey"="30",
                       "New Mexico"="31",
                       "New York"="32",
                       "North Carolina"="33",
                       "North Dakota"="34",
                       "Ohio"="35",
                       "Oklahoma"="36",
                       "Oregon"="37",
                       "Pennsylvania"="38",
                       "Rhode Island"="39",
                       "South Carolina"="40",
                       "South Dakota"="41",
                       "Tennessee"="42",
                       "Texas"="43",
                       "Utah"="44",
                       "Vermont"="45",
                       "Virginia"="46",
                       "Washington"="47",
                       "West Virginia"="48",
                       "Wisconsin"="49",
                       "Wyoming"="50"
)                                 %>%
str_replace_all("[[:punct:]]", "")%>%
   str_trim(side="both")          %>%
   str_to_lower()                 %>%
   str_to_title()                 %>%
  fct_recode("Alabama"="Al",
                       "Alaska"="Ak",
                       "Arizona"="Az",
                       "Arkansas"="Ar",
                       "California"="Ca",
                       "Colorado"="Co",
                       "Connecticut"="Ct",
                       "Delaware"="De",
                       "Florida"="Fl",
                       "Georgia"="Ga",
                       "Hawaii"="Hi",
                       "Idaho"="Id",
                       "Illinois"="Il",
                       "Indiana"="In",
                       "Iowa"="Ia",
                       "Kansas"="Ks",
                       "Kentucky"="Ky",
                       "Louisiana"="La",
                       "Maine"="Me",
                       "Maryland"="Md",
                       "Massachusetts"="Ma",
                       "Michigan"="Mi",
                       "Minnesota"="Mn",
                       "Mississippi"="Ms",
                       "Missouri"="Mo",
                       "Montana"="Mt",
                       "Nebraska"="Ne",
                       "Nevada"="Nv",
                       "New Hampshire"="Nh",
                       "New Jersey"="Nj",
                       "New Mexico"="Nm",
                       "New York"="Ny",
                       "North Carolina"="Nc",
                       "North Dakota"="Nd",
                       "Ohio"="Oh",
                       "Oklahoma"="Ok",
                       "Oregon"="Or",
                       "Pennsylvania"="Pa",
                       "Rhode Island"="Ri",
                       "South Carolina"="Sc",
                       "South Dakota"="Sd",
                       "Tennessee"="Tn",
                       "Texas"="Tx",
                       "Utah"="Ut",
                       "Vermont"="Vt",
                       "Virginia"="Va",
                       "Washington"="Wa",
                       "West Virginia"="Wv",
                       "Wisconsin"="Wi",
                       "Wyoming"="Wy"
)

# To finalize, there were some observations that did not correspond to actual states. For some the nearest option was chosen, others were disregarded.
df$State <- fct_recode(df$State,
                       "Georgia"="Go",
           "Delaware"="Da",
           "Iowa"="Iw",
           "Kentucky"="Kt",
           "Tennessee"="Te",
           "Virginia"="Vi",
           "0"="Virgin Islands",
           "0"="Ot",
           "0"="Pe",
           "0"="Ph",
           "0"="Na",
           "0"="Nr"
)%>%
  fct_explicit_na()%>%
  str_to_lower()

```

## 15. Household income                                                                               *Incomplete*

The variables consist of intervals. The earlier factors did not have the same levels, so this needed to be standardized.
An earlier version of this provided the option to change the interval to a specific number. This would allow for calculations using numbers.
However, for analysis it was decided that it would suffice to report intervals. The infrastructure to change each label to a number was still maintained just in case for easy switching in the future should the need arise to use numbers. 

The first variable is the categorical variable A11 which is used for US$. Respondents answering in other currencies are provided in variable"A11A_INCOME_IN_OTHER_CURRENCY".However, these have to be converted from numerical and included in the categorical variable for 2017 and 2018. For 2014 to 2016 this data processing was completed manually.

*The implaction is that this variable needs to be used with cuation as it is incomplete (exlcudes 'other' answers) for the years preceding 2014.*

```{r,eval=FALSE}
df$a11_2009 <- fct_recode(df$a11_2009,
                          "Less than US$ 20,000"="Less than US$ 20,000",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001-US$ 30,000",
                          "US$ 30,001 - US$ 50,000"="US$ 30,001-US$ 50,000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001-US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001-US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over"
                          )

df$A11_HOUSEHOLD_INCOME_2010 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2010,
                          "Less than US$ 20,000"="Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"="US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2011 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2011,
                          "Less than US$ 20,000"="Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"="US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2012 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2012,
                          "Less than US$ 20,000"="Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"="US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2013 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2013,
                          "Less than US$ 20,000"="Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"="US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2014 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2014,
                          "Less than US$ 20,000"=" Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"=" US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"=" US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"=" US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"=" US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"=" US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2015 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2015,
                          "Less than US$ 20,000"=" Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"=" US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"=" US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"=" US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"=" US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"=" US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2016 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2016,
                                           
                          "Less than US$ 20,000"="Less than 20,000 US$",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30.000",
                          "US$ 30,001 - US$ 50,000"="US$ 30.001- US$ 50.000",
                          "USS 50,001 - US$ 75,000"="US$ 50,001- US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001- US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency"
                          )

df$A11_HOUSEHOLD_INCOME_2017 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2017,
                          "Less than US$ 20,000"="Less than US$ 20,000",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30,000",
                          "US$ 30,001 - US$ 50,000"="US$ 30,001 - US$ 50,000",
                          "USS 50,001 - US$ 75,000"="USS 50,001 - US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001 - US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency",
                          NULL="Not reported",
                          NULL="9"
                          )

df$A11_HOUSEHOLD_INCOME_2018 <- fct_recode(df$A11_HOUSEHOLD_INCOME_2018,
                          "Less than US$ 20,000"="Less than US$ 20,000",
                          "US$ 20,001 - US$ 30,000"="US$ 20,001 - US$ 30,000",
                          "US$ 30,001 - US$ 50,000"="US$ 30,001 - US$ 50,000",
                          "USS 50,001 - US$ 75,000"="USS 50,001 - US$ 75,000",
                          "US$ 75,001 - US$ 100,000"="US$ 75,001 - US$ 100,000",
                          "US$ 100,001 and over"="US$ 100,001 and over",
                          NULL="Income is given in other currency",
                          NULL="Not reported"
                          )


df <- rendell(df                = df,
        Name_new_variable = "Household_Income", 
    Name_2009         = "a11_2009",
    Name_2010         = "A11_HOUSEHOLD_INCOME_2010", 
    Name_2011         = "A11_HOUSEHOLD_INCOME_2011", 
    Name_2012         = "A11_HOUSEHOLD_INCOME_2012", 
    Name_2013         = "A11_HOUSEHOLD_INCOME_2013", 
    Name_2014         = "A11_HOUSEHOLD_INCOME_2014", 
    Name_2015         = "A11_HOUSEHOLD_INCOME_2015", 
    Name_2016         = "A11_HOUSEHOLD_INCOME_2016",
    Name_2017         = "A11_HOUSEHOLD_INCOME_2017",
    Name_2018         = "A11_HOUSEHOLD_INCOME_2018"
)



# For 2016 A11 is complete, including the observations that are in other currency.
# For 2015 A11 is complete, including the observations that are in other currency.



# 2017 and 2018 need to be passed over from A11A_INCOME_IN_OTHER_CURRENCY to A11.
# mydata$Agecat1<-cut(mydata$Age, c(0,5,10,15,20,25,30))

df$A11A_INCOME_IN_OTHER_CURRENCY_2017 <-cut(df$A11A_INCOME_IN_OTHER_CURRENCY_2017,
                                             c(0,
                                               20000,
                                               30000,
                                               50000,
                                               75000,
                                               100000,
                                               500000
                                               ))

df$A11A_INCOME_IN_OTHER_CURRENCY_2018 <-cut(df$A11A_INCOME_IN_OTHER_CURRENCY_2018,
                                             c(0,
                                               20000,
                                               30000,
                                               50000,
                                               75000,
                                               100000,
                                               500000
                                               ))

df$A11A_INCOME_IN_OTHER_CURRENCY_2017 <- fct_recode(df$A11A_INCOME_IN_OTHER_CURRENCY_2017,
                          "Less than US$ 20,000"="(0,2e+04]",
                          "US$ 20,001 - US$ 30,000"="(2e+04,3e+04]",
                          "US$ 30,001 - US$ 50,000"="(3e+04,5e+04]",
                          "USS 50,001 - US$ 75,000"="(5e+04,7.5e+04]",
                          "US$ 75,001 - US$ 100,000"="(7.5e+04,1e+05]",
                          "US$ 100,001 and over"="(1e+05,5e+05]"
                          )

df$A11A_INCOME_IN_OTHER_CURRENCY_2018 <- fct_recode(df$A11A_INCOME_IN_OTHER_CURRENCY_2018,
                          "Less than US$ 20,000"="(0,2e+04]",
                          "US$ 20,001 - US$ 30,000"="(2e+04,3e+04]",
                          "US$ 30,001 - US$ 50,000"="(3e+04,5e+04]",
                          "USS 50,001 - US$ 75,000"="(5e+04,7.5e+04]",
                          "US$ 75,001 - US$ 100,000"="(7.5e+04,1e+05]",
                          "US$ 100,001 and over"="(1e+05,5e+05]"
                          )

# This is to add the factor columns for the values that are 'NA' but there are observations in other currency to the household income
df$Household_Income[is.na(df$Household_Income)] <- df$A11A_INCOME_IN_OTHER_CURRENCY_2017[is.na(df$Household_Income)]
df$Household_Income[is.na(df$Household_Income)] <- df$A11A_INCOME_IN_OTHER_CURRENCY_2018[is.na(df$Household_Income)]
```

# Creating a new dataframe only of the merged variables

Creating a data frame that holds only the variables which are ready for manipulation.
```{r,eval=FALSE}
Merged <- select(df, Year,
                    Month,
                    Q,
                    Gender,
                    WEIGHT,
                    W_EXP1,
                    W_EXP2,
                    W_EXP3,
                    W_EXP4,
                    W_EXP5,
                    W_EXP6,
                    W_EXP7,
                    W_EXP8,
                    W_EXP9,
                    W_EXP10,
                    W_EXP11,
                    W_EXP12,
                    W_EXP13,
                    W_EXP14,
                    W_EXP12_1,
                    W_EXP12_2,
                    W_TOT_EXP,
                    Resident,
                    Repeater,
                    Place_stay,
                    A1_MAIN_PURPOSE_VISIT,
                    Nights,
                    State,
                    Household_Income
                    )
```

# Write csv. file
To finalize, a CSV file can be generated which contains only the variables we will tabulate. 
```{r, eval=FALSE}
currentDate <- Sys.Date()
Merged_dataset <- paste(data,currentDate,".csv",sep="")
write.csv(Merged, file=Merged_dataset)

write.csv(Merged, file="Merged.csv")
```

# Notes
```{r, echo=FALSE, eval=FALSE}
##Average daily rate calculation:
#Conta gewogen hende nan multipliy by gewogen placa.

#*need to include B9 (how many persons does this expenditure cover)
#B9 total, adult and children (A & C)

#According to the picture taken from SPSS on Desiree's screen:

#A11_HOUSEHOLD_INCOME
#A11A_INCOME_IN_OTHER_CURRENCY
#A11B_CURRENCY
#Q_29_S
#CALCULATED_INCOME_IN_OTHER_CURRENCY


#A11A_INCOME_IN_OTHER_CURRENCY / other_currency_A11B

#A11B_CURRENCY

#Person per night per party. The observation are part of the sample that are regestiered per party. 
#Need to use N_PERNOC_2009
#Travelling party in number of people:
#B9T how many persons does this expenditure cover.(the T stands for total, rather than children and adults seperate, which are #also included in the data set)
```
