---
title: "Tourism Expenditure Survey merging"
output: html_notebook
---

Merging data files from 2009 to 2016.


```{r}
library(foreign)
library(dplyr)
library(tidyr)
```

```{r}
data_2009 <- read.spss("TES2009_ELE_final_agg.sav", to.data.frame=TRUE)
data_2010 <- read.spss("TES2010_ELE_final_agg.sav", to.data.frame=TRUE)
data_2012 <- read.spss("TES2012_ELE_final_agg.sav", to.data.frame=TRUE)
data_2013 <- read.spss("TES2013_ELE_final_agg.sav", to.data.frame=TRUE)
data_2014 <- read.spss("TES2014_ELE_final_agg.sav", to.data.frame=TRUE)
```

Bind all datasets using their serial number to create a unique key.
```{r}
data_2009$key <- 200900000+data_2009$sernr
data_2010$key <- 201000000+data_2010$TES_ID_SERIALNUMBER
data_2012$key <- 201200000+data_2012$TES_ID_SERIALNUMBER
data_2013$key <- 201300000+data_2013$TES_ID_SERIALNUMBER
data_2014$key <- 201400000+data_2014$SERIAL_NR

df <- full_join(data_2009,
                         data_2010,
                         by="key")
df <- full_join(df,
                         data_2012,
                         by="key")
df <- full_join(df,
                         data_2013,
                         by="key")
df <- full_join(df,
                         data_2014,
                         by="key")
```

Attemptin to write  "Rendell" function to automate merging of variables
```{r}
Rendell <-function(df, New_name, Name_2009, Name_2010, Name_2012, Name_2013, Name_2014) {
  df$New_name <- coalesce(df$Name_2009,
                                     df$Name_2010,
                                     df$Name_2012,
                                     df$Name_2013,
                                     df$Name_2014
                                     )
}
```

Use case
```{r}
Rendell(df=df,
        New_name=test,
        Name_2009=year,
        Name_2010=YEAR.x,
        Name_2012=YEAR.y,
        Name_2013=YEAR.x.x,
        Name_2014=YEAR.y.y
        )


df <- subset(df, select = -c(a, c))


table(Binded_data$coalesce)

```


#dropping variables
DF <- data.frame(
  x=1:10,
  y=10:1,
  z=rep(5,10),
  a=11:20
)
drops <- c("x","z")
DF[ , !(names(DF) %in% drops)]
