---
title: "Tourism Expenditure Survey merging"
output: html_notebook
---
```{r}
setwd("~/CBS TOUR/SPSS")
```
Merging data files from 2009 to 2018.

# Variables
The following variables have been identified for analysis:

1	Daily expenditure
2	place of residence
3	Number of visits
4	income level
5	Method visitors used to book a trip
6	Type of accomodation
7	important source of information visitors used
8	travel arragenment
9	lenght of stay
10	age group visitors
11	yearly household income
12	Occupation
13	visiotrs that have been to aruba by cruise prior to visit
14	visitors that have been to the caribbean prior
15	purpose of visit
16	users of timeshare property
17	type of flight used by the visitor
18	united states state
19	statement 1
20	statement 2
21	statement 3
22	statement 4
23	statement 5
24	statement 6
25	statement 7
26	statement 8
27	statement 9
28	Rating service accomodation
29	Rating rservice meals & drinks
30	Rating service Local transportation
31	Rating service Shopping
32	Rating service entertainment / recreation
33	Rating service quality of service
34	Rating overall visit Aruba
35	Rating value for money accomodation
36	Rating value for money meals & drinks
37	Rating value for money local transportation
38	Rating value for money shopping
39	Rating value for money entertainment/ recreation
40	Rating value for money quality of service
41	Average daily expenditure Accomodation
42	Average daily expenditure Food & Beverage
43	Average daily expenditure Groceries/sundries
44	Average daily expenditure Entertainment/Recreation
45	Average daily expenditure Taxis
46	Average daily expenditure Car rental
47	Average daily expenditure Public transportation
48	Average daily expenditure Tax free shopping
49	Average daily expenditure shopping
50	Average daily expenditure Casinos
51	Average daily expenditure Internet/Telephone
52	Average daily expenditure Other
53	Average daily expenditure Total
54	Persons the expenditure covers
55	Estimated total tourism expenditure


```{r}
library(foreign)
library(dplyr)
library(tidyr)
library(plyr)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
data_2009 <- read.spss("TES2009_ELE_final_agg.sav", to.data.frame=TRUE)
data_2010 <- read.spss("TES2010_ELE_final_agg.sav", to.data.frame=TRUE)
data_2011 <- read.spss("TES2011_ELE_final_agg.sav", to.data.frame=TRUE)
data_2012 <- read.spss("TES2012_ELE_final_agg.sav", to.data.frame=TRUE)
data_2013 <- read.spss("TES2013_ELE_final_agg.sav", to.data.frame=TRUE)
data_2014 <- read.spss("TES2014_ELE_final_agg.sav", to.data.frame=TRUE)
data_2015 <- read.spss("TES2015_ELE_final_agg.sav", to.data.frame=TRUE)
data_2016 <- read.spss("TES2016_ELE_final_agg.sav", to.data.frame=TRUE)
data_2017 <- read.spss("TES2017_ELE_final_agg.sav", to.data.frame=TRUE)

```

Bind all datasets using their serial number to create a unique key.
```{r}
colnames(data_2009) <- paste(colnames(data_2009), "2009", sep = "_")
colnames(data_2010) <- paste(colnames(data_2010), "2010", sep = "_")
colnames(data_2011) <- paste(colnames(data_2011), "2011", sep = "_")
colnames(data_2012) <- paste(colnames(data_2012), "2012", sep = "_")
colnames(data_2013) <- paste(colnames(data_2013), "2013", sep = "_")
colnames(data_2014) <- paste(colnames(data_2014), "2014", sep = "_")
colnames(data_2015) <- paste(colnames(data_2015), "2015", sep = "_")
colnames(data_2016) <- paste(colnames(data_2016), "2016", sep = "_")

data_2009$key <- 200900000+data_2009$sernr_2009
data_2010$key <- 201000000+data_2010$TES_ID_SERIALNUMBER_2010
data_2011$key <- 201100000+data_2011$TES_ID_SERIALNUMBER_2011
data_2012$key <- 201200000+data_2012$TES_ID_SERIALNUMBER_2012
data_2013$key <- 201300000+data_2013$TES_ID_SERIALNUMBER_2013
data_2014$key <- 201400000+data_2014$SERIAL_NR_2014
data_2015$key <- 201500000+data_2015$TES_ID_SERIALNUMBER_2015
data_2016$key <- 201600000+data_2016$TES_ID_SERIALNUMBER_2016
```

Prior to joining I want to take care of the variables who's names are not consistent
```{r}
# Variable 7: Place of Residence
levels(data_2009$a2_2009) <- c(levels(data_2009$a2_2009), "The Netherlands")
data_2009$a2_2009[data_2009$a2_2009=="Netherlands"]  <- "The Netherlands" 
data_2009$a2_2009 <- factor(data_2009$a2_2009)
data_2009$a2_2009 <- factor(data_2009$a2_2009, levels = c("United States", 
                                                          "Venezuela", 
                                                          "The Netherlands",
                                                          "Brazil",
                                                          "Netherlands Antilles",
                                                          "Canada",
                                                          "Colombia",
                                                          "Other"
                                                          ))
```
Combining the seperate data sets in to one integrated dataframe. 
```{r}
df <- full_join(data_2009,
                         data_2010,
                         by="key")
df <- full_join(df,
                         data_2011,
                         by="key")

df <- full_join(df,
                         data_2012,
                         by="key")
df <- full_join(df,
                         data_2013,
                         by="key")
df <- full_join(df,
                         data_2014,
                         by="key")
df <- full_join(df,
                         data_2015,
                         by="key")
df <- full_join(df,
                         data_2016,
                         by="key")

df <- df %>% select(-c(sernr_2009,TES_ID_SERIALNUMBER_2010,TES_ID_SERIALNUMBER_2011,TES_ID_SERIALNUMBER_2012,TES_ID_SERIALNUMBER_2013,TES_ID_SERIALNUMBER_2014,TES_ID_SERIALNUMBER_2015,TES_ID_SERIALNUMBER_2016))
```

```{r}
rm(data_2009)
rm(data_2010)
rm(data_2011)
rm(data_2012)
rm(data_2013)
rm(data_2014)
rm(data_2015)
rm(data_2016)
```

Writing  "Rendell" function to automate merging of variables
Stackoverflow suggestion:
```{r}
rendell <-function(df, Name_new_variable, 
                   Name_2009, 
                   Name_2010, 
                   Name_2011, 
                   Name_2012, 
                   Name_2013, 
                   Name_2014,
                   Name_2015, 
                   Name_2016) {
  df[, Name_new_variable]= coalesce(df[, Name_2009], 
                                    df[, Name_2010], 
                                    df[, Name_2011],
                                    df[, Name_2012],
                                    df[, Name_2013],
                                    df[, Name_2014],
                                    df[, Name_2015],
                                    df[, Name_2016]
                                    )
  
  df <- df %>% select(-c(Name_2009, 
                         Name_2010, 
                   Name_2011, 
                   Name_2012, 
                   Name_2013, 
                   Name_2014,
                   Name_2015, 
                   Name_2016)) 
}
```

Writing progress function
```{r}
progress <- round(1-length(df)/(343+494+495+494+494+505+526+511),2)
```

*Complete*
Variable 1 which is "Year":
```{r}
df <- rendell(df                = df,
        Name_new_variable = "Year", 
        Name_2009         = "year_2009",
        Name_2010         = "YEAR_2010", 
        Name_2011         = "YEAR_2011", 
        Name_2012         = "YEAR_2012", 
        Name_2013         = "YEAR_2013", 
        Name_2014         = "YEAR_2014", 
        Name_2015         = "YEAR_2015", 
        Name_2016         = "YEAR_2016" )
```

*Complete*
Variable 2 which is "Month". Noticed that 2009 variable October was names as Oktober. This was first corrected.
```{r}
df$month_2009 <- revalue(df$month_2009, c("Oktober"="October"))

df <- rendell(df                = df,
        Name_new_variable = "Month", 
        Name_2009         = "month_2009",
        Name_2010         = "MONTH_2010", 
        Name_2011         = "MONTH_2011", 
        Name_2012         = "MONTH_2012", 
        Name_2013         = "MONTH_2013", 
        Name_2014         = "MONTH_2014", 
        Name_2015         = "MONTH_2015", 
        Name_2016         = "MONTH_2016" )
```

*Complete*
Variable 3: Gender
```{r}
df <- rendell(df                = df,
        Name_new_variable = "Gender", 
        Name_2009         = "a9_2009",
        Name_2010         = "A9_SEX_2010", 
        Name_2011         = "A9_SEX_2011", 
        Name_2012         = "A9_SEX_2012", 
        Name_2013         = "A9_SEX_2013", 
        Name_2014         = "A9_SEX_2014", 
        Name_2015         = "A9_SEX_2015", 
        Name_2016         = "A9_SEX_2016" )
summary(df$Gender)
#Note: there are 5 NA's.
``` 

*Complete*
Variable 4: Ethnic background (refered to as "Type")    #Not included at the moment
The choice was taken by CBS to drop this variable since it was unlikely to be included in further analysis. 
```{r, eval=FALSE}
# levels(df$TYPE_2010) <- c(levels(df$TYPE_2010), "Cat_1") 
# df$TYPE_2010[df$TYPE_2010==1]  <- "Cat_1" 

# levels(df$TYPE_2010) <- c(levels(df$TYPE_2010), "Cat_2") 
# df$TYPE_2010[df$TYPE_2010==2]  <- "Cat_2" 

# df <- subset(df, TYPE_2010 != 1)                                         # this is not yet operational


# df <- rendell(df                = df,
#        Name_new_variable = "Type", 
#        Name_2009         = "type_2009",
#        Name_2010         = "TYPE_2010", 
#        Name_2011         = "TYPE_2011", 
#        Name_2012         = "TYPE_2012", 
#        Name_2013         = "TYPE_2013", 
#       Name_2014         = "TYPE_2014", 
#        Name_2015         = "TYPE_2015", 
#        Name_2016         = "TYPE_2016" )
#summary(df$Type)
#Note: coalesce not working aparantly unequal factor levels perhaps. 

df$type_2009 <- NULL
df$TYPE_2010 <- NULL
df$TYPE_2011 <- NULL
df$TYPE_2012 <- NULL
df$TYPE_2013 <- NULL
df$TYPE_2014 <- NULL
df$TYPE_2015 <- NULL
df$TYPE_2016 <- NULL
```


Variable 5: Main purpose of visit                                                                                  *complete*
```{r}
df$a1_2009 <- revalue(df$a1_2009, c(
  "Vacation"=" Vacation",
  "Honeymoon"=" Honeymoon",
  "Incentive award"= " Incentive award",
  "Visit friends/relatives"=" Visit friends/relatives",
  "Golf"=" Golf",
  "Business and leisure"=" Business and leisure",
  "Business only/ Convention/ Conference"=" Business only/ Convention/ Conference",
  "Wedding"=" Wedding",
  "Get married"=" Get married",
  "Events/ Festival"=" Events/ Festival",
  "Other"=" Other"
  ))

df <- rendell(df                = df,
        Name_new_variable = "A1_MAIN_PURPOSE_VISIT", 
        Name_2009         = "a1_2009",
        Name_2010         = "A1_MAIN_PURPOSE_VISIT_2010", 
        Name_2011         = "A1_MAIN_PURPOSE_VISIT_2011", 
        Name_2012         = "A1_MAIN_PURPOSE_VISIT_2012", 
        Name_2013         = "A1_MAIN_PURPOSE_VISIT_2013", 
        Name_2014         = "A1_MAIN_PURPOSE_VISIT_2014", 
        Name_2015         = "A1_MAIN_PURPOSE_VISIT_2015", 
        Name_2016         = "A1_MAIN_PURPOSE_VISIT_2016" )
summary(df$A1_MAIN_PURPOSE_VISIT)

```

Variable 6: Other purpose of visit
Can this one be left out of the analysis? Yes it can.                                                             *complete*
```{r}
df <- rendell(df                = df,
        Name_new_variable = "OTHER_PURPOSE_VISIT", 
        Name_2009         = "a1a_2009",
        Name_2010         = "OTHER_PURPOSE_OF_VISIT_2010", 
        Name_2011         = "OTHER_PURPOSE_OF_VISIT_2011", 
        Name_2012         = "OTHER_PURPOSE_OF_VISIT_2012", 
        Name_2013         = "OTHER_PURPOSE_OF_VISIT_2013", 
        Name_2014         = "OTHER_PURPOSE_OF_VISIT_2014", 
        Name_2015         = "OTHER_PURPOSE_OF_VISIT_2015", 
        Name_2016         = "OTHER_PURPOSE_OF_VISIT_2016" )
summary(df$OTHER_PURPOSE_VISIT)

corpus <- Corpus(VectorSource(df$OTHER_PURPOSE_VISIT))

##Data Cleaning and Wrangling
corpus.clean<-tm_map(corpus, PlainTextDocument)
corpus.clean<-tm_map(corpus.clean,tolower)
corpus.clean<-tm_map(corpus.clean,removeNumbers)
corpus.clean<-tm_map(corpus.clean,removePunctuation)
corpus.clean<-tm_map(corpus.clean,stripWhitespace)
corpus.clean = tm_map(corpus.clean, removeWords, stopwords())
# Remove your own stop word
# specify your stopwords as a character vector
corpus.clean <- tm_map(corpus.clean, removeWords, c("cont", "conocer","los")) 

dtm <- TermDocumentMatrix(corpus.clean)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
other.purpose <- data.frame(word = names(v),freq=v)
head(other.purpose, 10)

set.seed(1234)
wordcloud(words = other.purpose$word, freq = other.purpose$freq, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, "Dark2"))


rm(corpus.clean)
rm(corpus)
rm(dtm)
rm(m)
rm(v)
```

Variable 7: Place of Residence
```{r}
df$a2_2009 <- as.character(df$a2_2009)
df$A2_2010 <- as.character(df$A2_2010)
df$A2_2011 <- as.character(df$A2_2011)
df$A2_2012 <- as.character(df$A2_2012)
df$A2_2013 <- as.character(df$A2_2013)
df$A2_2014 <- as.character(df$A2_2014)
df$A2_2015 <- as.character(df$A2_2015)
df$A2_2016 <- as.character(df$A2_2016)




df <- rendell(df                = df,
        Name_new_variable = "PLACE_RESIDENCE", 
        Name_2009         = "a2_2009",
        Name_2010         = "A2_2010", 
        Name_2011         = "A2_2011", 
        Name_2012         = "A2_2012", 
        Name_2013         = "A2_2013", 
        Name_2014         = "A2_2014", 
        Name_2015         = "A2_2015", 
        Name_2016         = "A2_2016" )
df$PLACE_RESIDENCE <- as.factor(df$PLACE_RESIDENCE)
summary(df$PLACE_RESIDENCE)
#Note: Not finsihed yet. There are NA's appearing
```

# Analysis
```{r}
Y.2009 <- filter(df, Year == "2009")
Y.2010 <- filter(df, Year == "2010")
Y.2011 <- filter(df, Year == "2011")
Y.2012 <- filter(df, Year == "2012")
Y.2013 <- filter(df, Year == "2013")
Y.2014 <- filter(df, Year == "2014")
Y.2015 <- filter(df, Year == "2015")
Y.2016 <- filter(df, Year == "2016")

```
